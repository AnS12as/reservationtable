version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: reservation_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword  # Задай свой пароль
      POSTGRES_DB: reservation_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7
    container_name: reservation_redis
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  backend:
    build: .
    container_name: reservation_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:yourpassword@db:5432/reservation_db
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  celery_worker:
    build: .
    container_name: reservation_celery_worker
    restart: always
    depends_on:
      - backend
      - redis
    environment:
      DATABASE_URL: postgres://postgres:yourpassword@db:5432/reservation_db
      REDIS_URL: redis://redis:6379/0
    command: celery -A config worker --loglevel=info

  celery_beat:
    build: .
    container_name: reservation_celery_beat
    restart: always
    depends_on:
      - backend
      - redis
    environment:
      DATABASE_URL: postgres://postgres:yourpassword@db:5432/reservation_db
      REDIS_URL: redis://redis:6379/0
    command: celery -A config beat --loglevel=info

volumes:
  postgres_data:
  redis_data:
